#!/bin/bash
set -e

cleanup()
{
    EXIT=$?
    set +ex
    echo Stopping ranger server
    kill $RANCHER_RUN_PID
    wait $RANCHER_RUN_PID
    if [ $PID != -1 ]; then
      kill $PID
      wait $PID
    fi
    return $EXIT
}

# skipping tests for s390x since k3s doesn't support s390x yet
if [ ${ARCH} == s390x ]; then
    exit 0
fi

cd $(dirname $0)/..

#[ "${ARCH}" == "amd64" ] && RACE=-race
go test -cover -tags=test ./pkg/...

if [ ${ARCH} == arm64 ] || [ ${ARCH} == s390x ]; then
    export ETCD_UNSUPPORTED_ARCH=${ARCH}
fi

echo Starting ranger server for test
touch /tmp/ranger.log

run_ranger()
{
    while sleep 2; do
        if [ "$PID" != "-1" ] && [ ! -e /proc/$PID ]; then
            echo Ranger died
            echo Ranger logs were
            tail -n 25 /tmp/ranger.log
            echo K3s logs were:
            tail -n 25 build/testdata/k3s.log
            if [ "$INT_TESTS_STARTED" = "true" ]; then
              echo Ranger died after tests started, aborting
              exit 1
            fi
            set +e
            echo Attempting to kill K3s
            pkill -e k3s
            set -e
            PID=-1
            sleep 5
        fi
        if [ "$PID" = "-1" ]; then
          echo Starting ranger server using run
          ./scripts/run >/tmp/ranger.log 2>&1 &
          PID=$!
        fi
        sleep 2
    done
}

# uncomment to get startup logs. Don't leave them on because it slows drone down too
# much
#tail -F /tmp/ranger.log &
#TPID=$!
PID=-1
run_ranger &
RANCHER_RUN_PID=$!
trap cleanup exit

echo Sleeping for 5 seconds before checking Ranger health
sleep 5

while ! curl -sf http://localhost:8080/ping; do
    sleep 2
done

while ! kubectl --kubeconfig /etc/ranger/k3s/k3s.yaml rollout status -w -n cattle-system deploy/ranger-webhook; do
    sleep 2
done
#kill $TPID

# get correct agent tag
source ./scripts/version
export AGENT_TAG=${TAG}

echo Running tests

echo Running build-integration-setup
./tests/v2/integration/scripts/build-integration-setup

echo Running integrationsetup
path=$(pwd)
export CATTLE_TEST_CONFIG=${path}/config.yaml
./tests/v2/integration/bin/integrationsetup

echo Running go tests
go test -v ./tests/v2/integration/...

echo Running tox tests
INT_TESTS_STARTED=true
cd ./tests/integration
tox -e ranger -- -m "not nonparallel" -n $(nproc)
tox -e ranger -- -m nonparallel

#tail -f /tmp/ranger-test.log &
